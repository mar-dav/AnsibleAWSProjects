- hosts: localhost
  connection: local
  gather_facts: False #This is our controller thus we don't need to gather facts
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup #vars folder directory

      #using ansible ec2_vpc_net documentation
    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{vpc_name}}" #use VPC name created in outline using j2 var
        cidr_block: "{{vpcCidr}}" #use VPC cidr block defined in outline
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes # default values
        tenancy: default
        state: "{{state}}"
      register: vpcout #capture output to variable
      #We will push this to our AWS machine

    - debug: #push console output to a variable
        var: vpcout #store in vpcout

    - name: Create public subnet 1 - Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone1 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_out #log output to variable

    - name: Create public subnet 2 - Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone2 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_pubsub2
      register: pubsub2_out #log output to variable

    - name: Create public subnet 3 - Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone3 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_pubsub3
      register: pubsub3_out #log output to variable

      ############Create private subnets##############

    - name: Create priv subnet 1 - Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone1 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PrivSub1Cidr }}"
        map_public: no
        resource_tags:
          Name: vprofile_privsub1
      register: privsub1_out #log output to variable

    - name: Create priv subnet 2 - Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone2 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PrivSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_privsub2
      register: privsub2_out #log output to variable

    - name: Create public subnet 3 - Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone3 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PrivSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_privsub3
      register: privsub3_out #log output to variable

    - name: Internet Gateway Setup
      ec2_vpc_igw: #Internet Gateway Module
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: vprofile_IGW
        register: igw_out
