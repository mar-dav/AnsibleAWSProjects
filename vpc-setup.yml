- hosts: localhost
  connection: local
  gather_facts: False #This is our controller thus we don't need to gather facts
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup #vars folder directory

      #using ansible ec2_vpc_net documentation
    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{vpc_name}}" #use VPC name created in outline using j2 var
        cidr_block: "{{vpcCidr}}" #use VPC cidr block defined in outline
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes # default values
        tenancy: default
        state: "{{state}}"
      register: vpcout #capture output to variable
      #We will push this to our AWS machine

    - debug: #push console output to a variable
        var: vpcout #store in vpcout

    - name: Create public subnet 1 - Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone1 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_out #log output to variable

    - name: Create public subnet 2 - Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone2 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_pubsub2
      register: pubsub2_out #log output to variable

    - name: Create public subnet 3 - Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone3 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_pubsub3
      register: pubsub3_out #log output to variable

      ############Create private subnets##############

    - name: Create priv subnet 1 - Zone 1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone1 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PrivSub1Cidr }}"
        map_public: no
        resource_tags:
          Name: vprofile_privsub1
      register: privsub1_out #log output to variable

    - name: Create priv subnet 2 - Zone 2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone2 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PrivSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_privsub2
      register: privsub2_out #log output to variable

    - name: Create public subnet 3 - Zone 3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        az: "{{ zone3 }}" # all using vars from vpc_setup
        state: "{{ state }}"
        cidr: "{{ PrivSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile_privsub3
      register: privsub3_out #log output to variable

    - name: Internet Gateway Setup
      ec2_vpc_igw: #Internet Gateway Module
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: vprofile_IGW
      register: igw_out #log output to variable

    - name: Set up public subnet route table
      ec2_vpc_route_table:
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{ region }}"
          tags:
            Name: vprofile-pubRT
          subnets:
            - "{{pubsub1_out.subnet.id}}"
            - "{{pubsub2_out.subnet.id}}"
            - "{{pubsub3_out.subnet.id}}"
          routes:
            - dest: 0.0.0.0/0
              gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out

    - name: Create NAT gateway for private subnet #Gateways are expensive, delete after run. PoC only.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true #A nat gateway will be created every time the playbook is run. $$$
      register: natGW_out

    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        tags:
          Name: vprofile-privRT
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0 #0.0.0.0 = anywhere
            gateway_id: "{{ natGW_out.nat_gateway_id }}"
      register: privRT_out

    - debug: #print all the IDs to terminal
        var: "{{item}}" #variable of loop
      loop: #cycle through all the ids we have created & print IDs
        - vpcout.vpc.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - privRT_out.route_table.id
        - natGW_out.nat_gateway_id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id

    - set_fact: #set_fact allows us to create new variables
        vpcoutid: "{{vpcout.vpc.id}}"
        igwid: "{{igw_out.gateway_id}}"
        pubRTid: "{{pubRT_out.route_table.id}}"
        privRTid: "{{privRT_out.route_table.id}}"
        natGWid: "{{natGW_out.nat_gateway_id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        privsub1id: "{{privsub1_out.subnet.id}}"
        privsub2id: "{{privsub2_out.subnet.id}}"
        privsub3id: "{{privsub3_out.subnet.id}}"
        cacheable: yes #Add variable to fact cache.

    - name: Create variables file for vpc output
      copy: #Creates new file /vars/output_vars using content (our infrastructure IDs)
        content: "vpcid: {{vpcout.vpc.id}}\nigwid: {{igw_out.gateway_id}}\npubRTid: {{pubRT_out.route_table.id}}\nprivRTid: {{privRT_out.route_table.id}}\nnatGWid: {{natGW_out.nat_gateway_id}}\npubsub1id: {{pubsub1_out.subnet.id}}\npubsub2id: {{pubsub2_out.subnet.id}}\npubsub3id: {{pubsub3_out.subnet.id}}\nprivsub1id: {{privsub1_out.subnet.id}}\nprivsub2id: {{privsub2_out.subnet.id}}\nprivsub3id: {{privsub3_out.subnet.id}}"
        dest: vars/output_vars